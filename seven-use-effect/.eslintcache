[{"D:\\Kaushal\\Apps\\React\\seven-use-effect\\src\\index.js":"1","D:\\Kaushal\\Apps\\React\\seven-use-effect\\src\\App.js":"2","D:\\Kaushal\\Apps\\React\\seven-use-effect\\src\\reportWebVitals.js":"3","D:\\Kaushal\\Apps\\React\\seven-use-effect\\src\\Components\\Todo.js":"4","D:\\Kaushal\\Apps\\React\\seven-use-effect\\src\\Components\\TodoForm.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":934,"mtime":1610187652996,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":552,"mtime":1610024502465,"results":"10","hashOfConfig":"7"},{"size":1087,"mtime":1609870487176,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"r4yf44",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"D:\\Kaushal\\Apps\\React\\seven-use-effect\\src\\index.js",[],["25","26"],"D:\\Kaushal\\Apps\\React\\seven-use-effect\\src\\App.js",[],"D:\\Kaushal\\Apps\\React\\seven-use-effect\\src\\reportWebVitals.js",[],"D:\\Kaushal\\Apps\\React\\seven-use-effect\\src\\Components\\Todo.js",[],"D:\\Kaushal\\Apps\\React\\seven-use-effect\\src\\Components\\TodoForm.js",["27"],"import React, { useState } from 'react';\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Form,\r\n  Container,\r\n  Button,\r\n} from 'reactstrap';\r\nimport { v4 } from 'uuid';\r\n\r\nconst TodoForm = ({ addTodos }) => {\r\n  const [todoString, setTodoString] = useState('');\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (todoString === '') {\r\n      return alert('Enter Todo!');\r\n    }\r\n    const todo = {\r\n      todoString,\r\n      id: v4(),\r\n    };\r\n    addTodos(todo);\r\n    setTodoString('');\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <InputGroup>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"todo\"\r\n            id=\"todo\"\r\n            placeholder=\"Enter Todo\"\r\n            value={todoString}\r\n            onChange={(e) => setTodoString(e.target.value)}\r\n          />\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <Button color=\"success\">Add Todo</Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":8,"column":3,"nodeType":"36","messageId":"37","endLine":8,"endColumn":12},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar",["40"],["41"],"no-global-assign","no-unsafe-negation"]